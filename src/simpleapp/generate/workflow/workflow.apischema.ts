/**
 * This file was automatically generated by simpleapp generator. Every
 * MODIFICATION OVERRIDE BY GENERATEOR
 * last change 2024-02-23
 * Author: Ks Tan
 */
import { ApiProperty } from '@nestjs/swagger';

export class WorkflowSettingApiSchema {
  @ApiProperty({
    type: 'string',
    required: true,
    description:
      'provide endpoint to refer user/group info inside bpmn user task',
  })
  userServiceUrl: string;
  @ApiProperty({
    type: 'string',
    required: false,
    description:
      'workflow may not realtime complete, supply call back url after complete workflow',
  })
  callBackUrl: string;
  @ApiProperty({ type: 'string', required: false, description: 'optional' })
  assignee: string;
  @ApiProperty({ type: ['string'], required: false, description: 'optional' })
  candidateUsers: string;
  @ApiProperty({ type: ['string'], required: false, description: 'optional' })
  candidateGroups: string;
}
export class WorkflowDataApiSchema {
  @ApiProperty({ type: WorkflowSettingApiSchema, required: true })
  workflowSetting: WorkflowSettingApiSchema;

  @ApiProperty({ type: Object, required: true })
  data: any;
}

export class WorkflowTaskApiSchema {
  @ApiProperty()
  id: string;
  @ApiProperty()
  name: string;
  @ApiProperty()
  status: string;
  @ApiProperty()
  assignee: string;
  @ApiProperty()
  candidateUsers: string[];
  @ApiProperty()
  candidateGroups: string[];
  @ApiProperty()
  type: string;
}
export class WorkflowProcessApiSchema {
  @ApiProperty()
  id: string;
  @ApiProperty()
  name: string;
  @ApiProperty()
  startedAt: string;
  @ApiProperty()
  status: string;
  @ApiProperty({ type: () => [WorkflowTaskApiSchema] })
  items: WorkflowTaskApiSchema[];
}

export class SearchWorkflowProcessApiSchema {
  @ApiProperty()
  id: string;
  @ApiProperty()
  name: string;
  @ApiProperty()
  startedAt: string;
  @ApiProperty()
  status: string;

  @ApiProperty()
  'items.id': string;
  @ApiProperty()
  'items.name': string;
  @ApiProperty()
  'items.status': string;
  @ApiProperty()
  'items.assignee': string;
  @ApiProperty()
  'items.candidateUsers': string[];
  @ApiProperty()
  'items.candidateGroups': string[];
  @ApiProperty()
  'items.type': string;
}

export class UserTaskActorsApiSchema {
  @ApiProperty()
  assignee: string;
  @ApiProperty()
  candidateUsers: string[];
  @ApiProperty()
  candidateGroups: string[];
}

export class UserTaskApiSchema {
  @ApiProperty()
  id: string;
  @ApiProperty()
  taskId: string;
  @ApiProperty()
  elementId: string;
  @ApiProperty()
  name: string;
  @ApiProperty()
  processName: string;
  @ApiProperty()
  assignee: string;
  @ApiProperty({ type: () => [String] })
  candidateUsers: string[];
  @ApiProperty({ type: () => [String] })
  candidateGroups: string[];
  @ApiProperty({ type: Object, required: true })
  data: any;
  @ApiProperty()
  vars: any;
  @ApiProperty()
  startedAt: string;
  @ApiProperty()
  followUpDate: string;
  @ApiProperty()
  dueDate: string;
  @ApiProperty()
  priority: string;
  @ApiProperty()
  type: string;
  @ApiProperty()
  userId: string;
}
